events {
    
}


http {

  # required to make nginx send the mine types
  types {
    text/html html; # this means: files with '.html' extension will be threated as 'text/html'
    # there is a file with all the mime types "/etc/nginx/mime.types". Use "include mime.types;" instead.
  }

  include mime.types;

  # this defines a new vertial host
  server{
    listen 8080;
    server_name localhost;

    root /usr/local/nginx/html/;

    # location blocks configure URI requests handles.
    # Priority: regex > prefix > exact 

    # This prefix match:
    location /greet {
      return 200 'Hello Prefix!';
    }

    # This exact match:
    location = /greeting {
      return 200 'Hello Exact!';
    }

    # This regex match:
    location ~ /greet[0-9] {
      return 200 'Hello regex!';
    }

    # This regex match and case insensitive:
    location ~* /GrEeTing[0-9] {
      return 200 'Hello regex case insensitive!';
    }

    # Like "prefix match" but with higher priority then regex:
    location ^~ /greet8 {
      return 200 'Hello prefix match with higher priority then regex!';
    }

    location = /inspect {
      return 200 "$host\n$args\n$arg_mymessage";
    }

    if ( $arg_apikey = 1234 ) {
      return 401 "Incorrect API Key";
    }

    set $weekend 'No';

    # this one is executing a redirect
    location /logo {
      return 307 /thumb.png;
    }


    location = /greet/maria {
      return 200 'Hello maria!';
    }

    # rewriting the rule
    rewrite ^/user/\w+ /greet;

    # rewriting the rule with capturing group
    rewrite ^/username/(\w+) /greet/$1;

  }


}